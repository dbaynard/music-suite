
import Music.Prelude
import Util
import Foreign.JavaScript
import Foreign.RemotePtr
import Control.Concurrent (forkIO, threadDelay)
import Data.Aeson(Value(..))
import qualified Data.Aeson
import Data.Foldable(toList)


runJS w s = runFunction w (ffi s :: JSFunction ())

main = serve (defaultConfig {
  jsStatic=Just "/Users/hans/Documents/Kod/hs/music-preludes/",
  jsCustomHTML=Just "gui.html"}) 
  $ \w -> do
    rectHandler <- exportHandler w $ \rects -> do
      print (rects::Value)
      audify $ fromRects $ getRects rects
      openMusicXml $ fromRects $ getRects rects
    withRemotePtr rectHandler $ \_ _ -> do
      runFunction w $ (ffi "window.h.start(%1)" rectHandler)
      forkIO $ forever $ do
        threadDelay 1000000
        runFunction w $ (ffi "window.h.dummy(%1)" rectHandler)
    return ()


r1 =
  [[31,118,508,128],[305,153,387,222],[525,222,558,111],[422,75,370,42],[562,20,695,115],[799,135,952,138],[803,188,803,164],[867,52,1045,183],[1211,194,1065,143]]
r2 =
  [[22,19,197,473],[237,86,1205,130],[1172,150,1234,200]]
r3 =
  [[20,23,231,273],[277,42,310,56],[326,97,369,113],[276,156,305,196],[422,206,486,231],[524,37,544,57],[649,128,669,148],[478,132,498,152],[475,97,495,117],[701,76,721,96],[654,258,674,278],[866,248,886,268],[812,562,1162,644],[796,539,498,375],[446,333,367,263],[1158,24,1242,42]]
r4 = 
  [[179,97,598,289],[626,146,646,166],[707,144,880,122],[851,116,799,73],[743,241,1023,298],[536,46,536,46],[234,145,233,144],[332,131,352,151],[719,174,828,119],[423,144,605,274],[423,144,1014,218],[1132,164,1144,111],[162,87,296,161],[164,232,317,295],[394,288,462,288],[366,113,386,133],[406,84,426,104],[571,83,591,103],[602,80,622,100],[545,94,565,114],[472,94,492,114],[448,98,468,118],[632,33,652,53],[690,88,710,108],[813,62,833,82],[910,61,930,81],[970,69,990,89],[861,223,881,243],[713,270,733,290],[662,245,682,265],[178,236,198,256],[238,204,258,224],[351,204,371,224],[404,311,424,331],[465,320,485,340],[547,308,567,328],[628,301,648,321],[175,187,195,207],[97,262,117,282],[135,335,155,355],[10,275,906,291],[5,327,1241,325]]
r5 =
  [[234,62,722,169],[104,201,194,202],[404,243,629,118],[228,221,449,437],[137,334,327,424],[760,331,1093,339],[951,311,930,198],[830,154,747,56],[901,30,1097,168],[379,523,716,295],[389,242,620,180],[786,209,806,229],[699,230,719,250],[715,341,735,361],[924,328,944,348],[930,328,950,348],[933,378,953,398],[836,417,856,437],[774,367,794,387],[781,230,801,250],[913,212,933,232],[1110,212,1130,232],[1118,212,1138,232],[182,156,202,176],[191,155,211,175],[80,115,100,135],[51,82,71,102],[286,69,306,89],[450,28,470,48],[703,17,723,37],[747,63,767,83],[809,166,829,186],[808,170,828,190],[913,252,933,272],[1084,282,1104,302],[1102,294,1122,314],[1170,443,1190,463],[1170,443,1190,463],[1161,527,1181,547],[1206,558,1226,578],[1207,559,1227,579],[995,563,1015,583],[942,567,962,587],[949,646,969,666],[1203,788,1198,475],[1214,200,1229,412],[22,492,302,808],[0,26,0,48],[16,79,-8,68],[23,46,15,31],[29,21,73,39],[99,60,114,75],[137,102,139,129],[142,145,149,147],[140,263,157,274],[152,305,170,305],[640,600,649,618]]

getRects :: Value -> [[Double]]
getRects (Array xs) = fmap getRect $ toList xs
  where
    getRect (Array xs) = fmap getN $ toList xs
    getN (Number x) = realToFrac x
     
fromRects :: [[Double]] -> Music
fromRects xs = rcat $ map f xs
  where
    f [x1,y1,x2,y2] = transform (toSpan x1 x2) $ down (toInt y2) $ set parts' violins $ ppar $ take ((+ 2) $ abs $ toNPitches $ y1-y2) [c..c''']
    -- TODO use range as well (y1-y2)

    toSpan x1 x2 | abs (toDur x2 - toDur x1) < 0.2  = toDur x1 >-> (1/4)
                 | otherwise                        = toDur x1 <-> toDur x2
    toDur x = ((fromInteger.round) ((x/1200)*100))/10
    toInt x = spell usingSharps $ ((fromInteger.round) ((x/800)*24) :: Semitones)
    toNPitches x = round $ ((fromInteger.round) ((x/800)*(12*7)))

