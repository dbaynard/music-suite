
name:                   music-suite
version:                2.0.0
author:                 Hans Hoglund
maintainer:             Hans Hoglund <music-suite-discuss@googlegroups.com>
license:                BSD3
license-file:           COPYING
synopsis:               A set of libraries for composition, analysis and manipulation of music.
category:               Music
tested-with:            GHC
build-type:             Simple
cabal-version:          >= 1.10

description:
    See <http://music-suite.github.io>.

extra-source-files:     README.md,
                        examples/*.hs,
                        examples/*.scm

source-repository head
    type:             	git
    location:         	git://github.com/music-suite/music-suite.git

library
    build-depends:      base,
                        lens,
                        text,
                        split,
                        containers,
                        comonad,
                        vector-space,
                        vector-space-points,
                        process,
                        filepath,
                        temporary,
                        optparse-applicative,
                        average,
                        semigroups,
                        -- hsini,
                        monadplus,
                        transformers,
                        unordered-containers,
                        base-orphans,
                        data-default,
                        file-embed,
                        aeson,
                        roman-numerals,
                        bytestring,
                        cassava,
                        mtl,
                        contravariant,
                        base-prelude,
                        NumInstances,
                        MonadRandom,
                        colour,
                        logict,
                        parsec,
                        directory,
                        prettify,
                        HCodecs,
                        data-interval,
                        positive,
                        type-unary,
                        xml,
                        random,
                        random-shuffle
                        -- ,
                        -- record
    if !os(windows)
      build-depends:    unix

    exposed-modules:    Music.Articulation
                        Music.Dynamics
                        Music.Dynamics.Absolute
                        Music.Dynamics.Common
                        Music.Dynamics.Balance
                        Music.Dynamics.Literal
                        Data.Semigroup.Option.Instances
                        Music.Parts
                        Music.Parts.Voices
                        Music.Parts.Division
                        Music.Parts.Subpart
                        Music.Parts.Solo
                        Music.Parts.Part
                        Music.Parts.Group
                        Music.Parts.Instrument
                        Music.Parts.Instrument.Strings
                        Music.Parts.Instrument.Woodwind
                        Music.Parts.Instrument.Brass
                        Music.Parts.Instrument.Percussion
                        Music.Parts.Instrument.Keyboard
                        Music.Parts.Instrument.Vocal
                        Music.Parts.Internal.Data
                        Music.Pitch.Absolute
                        Data.Music.Lilypond
                        Data.Music.Lilypond.Dynamics
                        Data.Music.Lilypond.Pitch
                        Data.Music.Lilypond.Value
                        Data.Music.MusicXml
                        Data.Music.MusicXml.Dynamics
                        Data.Music.MusicXml.Pitch
                        Data.Music.MusicXml.Read
                        Data.Music.MusicXml.Score
                        Data.Music.MusicXml.Simple
                        Data.Music.MusicXml.Time
                        Data.Music.MusicXml.Write
                        Data.Music.MusicXml.Write.Score
                        Music.Pitch
                        Music.Pitch.Equal
                        Music.Pitch.Common
                        Music.Pitch.Common.Types
                        Music.Pitch.Common.Quality
                        Music.Pitch.Common.Number
                        Music.Pitch.Common.Interval
                        Music.Pitch.Common.Pitch
                        Music.Pitch.Common.Semitones
                        Music.Pitch.Common.Spell
                        Music.Pitch.Common.Harmony
                        Music.Pitch.Common.Names
                        Music.Pitch.Ambitus
                        Music.Pitch.Scale
                        Music.Pitch.Clef
                        Music.Pitch.Intonation
                        Music.Pitch.Literal
                        Music.Pitch.Literal.Pitch
                        Music.Pitch.Literal.Interval
                        Music.Pitch.Augmentable
                        Music.Pitch.Alterable
                        Data.PairMonad
                        Data.AffineSpace.Point.Offsets
                        Data.Functor.Couple
                        Data.Functor.Context
                        Data.Functor.Rep.Lens
                        Data.Semigroup.Instances
                        Control.Monad.Compose
                        Music.Time
                        Music.Time.Types
                        Music.Time.Transform
                        Music.Time.Duration
                        Music.Time.Position
                        Music.Time.Split
                        Music.Time.Reverse
                        Music.Time.Juxtapose
                        Music.Time.Rest
                        Music.Time.Aligned
                        Music.Time.Note
                        Music.Time.Placed
                        Music.Time.Event
                        Music.Time.Track
                        Music.Time.Voice
                        Music.Time.Score
                        Music.Time.Behavior
                        Music.Time.Reactive
                        Music.Time.Meta
                        Music.Score
                        Music.Score.Ties
                        Music.Score.Part
                        Music.Score.Phrases
                        Music.Score.Meta
                        Music.Score.Meta.Annotations
                        Music.Score.Meta.Attribution
                        Music.Score.Meta.Barline
                        Music.Score.Meta.Clef
                        Music.Score.Meta.Fermata
                        Music.Score.Meta.Key
                        Music.Score.Meta.RehearsalMark
                        Music.Score.Meta.Tempo
                        Music.Score.Meta.Time
                        Music.Score.Meta.Title
                        Music.Score.Meta.Extract
                        Music.Score.Pitch
                        Music.Score.Articulation
                        Music.Score.Dynamics
                        Music.Score.Slide
                        Music.Score.Tremolo
                        Music.Score.Text
                        Music.Score.Harmonics
                        Music.Score.Color
                        -- Music.Score.Export.Abc
                        -- Music.Score.Export.Backend
                        -- Music.Score.Export.NoteList
                        -- Music.Score.Export.Midi
                        -- Music.Score.Export.SuperCollider
                        -- Music.Score.Export.Lilypond
                        -- Music.Score.Export.MusicXml
                        Music.Score.Export.ArticulationNotation
                        Music.Score.Export.DynamicNotation
                        Music.Score.Export2.StandardNotation
                        Music.Score.Import.Abc
                        Music.Score.Import.Lilypond
                        Music.Score.Import.Midi
                        -- We expose these to allow GHCI development
                        Music.Time.Internal.Convert
                        Music.Time.Internal.Util
                        Music.Time.Internal.Transform
                        Music.Score.Internal.Data
                        Music.Score.Internal.Quantize
                        Music.Score.Internal.VoiceSeparation
                        Music.Score.Internal.Instances
                        Music.Score.Internal.Util
                        Music.Score.Internal.Export
                        Music.Time.Internal.Preliminaries
                        Music.Pitch.Tokawa
                        Data.Music.Sibelius
                        Music.Score.Import.Sibelius
                        Music.Prelude
                        Music.Prelude.Standard
                        Music.Prelude.CmdLine
                        Music.Prelude.Instances
                        Music.Prelude.Inspectable
    other-modules:      Paths_music_suite
    hs-source-dirs:     src
    default-language:   Haskell2010
    default-extensions: ConstraintKinds,
                        DeriveDataTypeable,
                        DeriveFoldable,
                        DeriveFunctor,
                        DeriveTraversable,
                        GeneralizedNewtypeDeriving,
                        MultiParamTypeClasses,
                        NoMonomorphismRestriction,
                        RankNTypes,
                        StandaloneDeriving,
                        TupleSections,
                        TypeFamilies,
                        TypeOperators,
                        ViewPatterns,
                        OverloadedStrings

test-suite "music-suite-test-umts"
    build-depends:      base,
                        tasty,
                        tasty-golden,
                        process,
                        average,
                        containers,
                        tasty-quickcheck,
                        QuickCheck,
                        semigroups,
                        comonad,
                        music-suite
    main-is:            UMTS.hs
    type:               exitcode-stdio-1.0
    hs-source-dirs:     test
    default-language:   Haskell2010

test-suite "music-suite-test-laws"
    build-depends:      base,
                        tasty,
                        tasty-golden,
                        process,
                        average,
                        containers,
                        tasty-quickcheck,
                        QuickCheck,
                        semigroups,
                        comonad,
                        music-suite
    type:               exitcode-stdio-1.0
    main-is:            Laws.hs
    hs-source-dirs:     test
    default-language:   Haskell2010

-- Examples:

-- executable "music-suite-examples-analysis"
--     build-depends:      base,
--                         lens,
--                         music-suite
--     hs-source-dirs:     examples
--     main-is:            analysis.hs

-- executable "music-suite-examples-mozart"
--     build-depends:      base,
--                         music-suite
--     hs-source-dirs:     examples
--     main-is:            mozart.hs

executable "music-suite-examples-part"
    build-depends:      base,
                        music-suite
    hs-source-dirs:     examples
    main-is:            part.hs

executable "music-suite-examples-time_signatures"
    build-depends:      base,
                        lens,
                        music-suite
    hs-source-dirs:     examples
    main-is:            time_signatures.hs

executable "music-suite-examples-trio"
    build-depends:      base,
                        lens,
                        music-suite
    hs-source-dirs:     examples
    main-is:            trio.hs

executable "music-suite-examples-tuplet"
    build-depends:      base,
                        lens,
                        music-suite
    hs-source-dirs:     examples
    main-is:            tuplet.hs

executable "music-suite-examples-voices"
    build-depends:      base,
                        lens,
                        music-suite
    hs-source-dirs:     examples
    main-is:            voices.hs
